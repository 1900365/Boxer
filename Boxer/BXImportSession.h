/* 
 Boxer is copyright 2011 Alun Bestor and contributors.
 Boxer is released under the GNU General Public License 2.0. A full copy of this license can be
 found in this XCode project at Resources/English.lproj/BoxerHelp/pages/legalese.html, or read
 online at [http://www.gnu.org/licenses/gpl-2.0.txt].
 */


//BXImportSession is a BXSession document subclass which manages the importing of a new game
//from start to finish.
//Besides handling the emulator session that runs the game installer, BXImportSession also
//prepares a new gamebox and manages the drag-drop wizard which bookends (or in many cases
//comprises) the import process.

#import "BXSession.h"
#import "BXOperation.h"
#import "BXOperationDelegate.h"

#pragma mark -
#pragma mark Class constants

//Constants returned by importStage
enum {
	BXImportSessionWaitingForSourcePath = 0,
	BXImportSessionLoadingSourcePath,
	BXImportSessionWaitingForInstaller,
	BXImportSessionReadyToLaunchInstaller,
	BXImportSessionRunningInstaller,
	BXImportSessionReadyToFinalize,
	BXImportSessionImportingSourceFiles,
	BXImportSessionCancellingSourceFileImport,
	BXImportSessionCleaningGamebox,
	BXImportSessionFinished
};
typedef NSUInteger BXImportStage;

//Constants returned by sourceFileImportType
enum {
	BXImportTypeUnknown = 0,			//We haven't decided yet what we're importing from
	BXImportFromPreInstalledGame,		//Bundling a pre-installed game folder into a gamebox
	BXImportFromCDVolume,				//Coping from a real CD
	BXImportFromFloppyVolume,			//Copying from a real floppy disk
	BXImportFromCDImage,				//Copying from a CD image
	BXImportFromFloppyImage,			//Copying from a floppy-disk image
	BXImportFromHardDiskImage,			//Copying from a hard-disk image (currently unused)
	BXImportFromFolderToCD,				//Converting a folder of game files into a fake CD
	BXImportFromFolderToFloppy,			//Converting a folder of game files into a fake floppy
	BXImportFromFolderToHardDisk		//Converting a folder of game files into a secondary hard disk
};
typedef NSUInteger BXSourceFileImportType;


@class BXImportWindowController;
@protocol BXDriveImport;

@interface BXImportSession : BXSession <BXOperationDelegate>
{
	NSString *sourcePath;
	BXImportWindowController *importWindowController;
	NSArray *installerPaths;
	
	NSString *rootDrivePath;
	
	BXImportStage importStage;
	BXOperationProgress stageProgress;
	BOOL stageProgressIndeterminate;
	
	BOOL hasAutoGeneratedIcon;
	BOOL didMountSourceVolume;
	
	BXOperation *sourceFileImportOperation;
	BXSourceFileImportType sourceFileImportType;
	BOOL sourceFileImportRequired;
}

#pragma mark -
#pragma mark Properties

//The window controller which manages the import window, as distinct from the DOS session window.
@property (retain, nonatomic) BXImportWindowController *importWindowController;


//The source path from which we are installing the game.
//This can only be set from confirmSourcePath:
@property (readonly, copy, nonatomic) NSString *sourcePath;

//The range of possible DOS installers to choose from.
@property (readonly, retain, nonatomic) NSArray *installerPaths;

//The path of the installer we will choose as the default from among installerPaths.
@property (readonly, nonatomic) NSString *preferredInstallerPath;

//The display filename of the gamebox, minus extension.
//Changing this will rename the gamebox file itself.
@property (retain, nonatomic) NSString *gameboxName;


//What stage of the import process we are up to (as a BXImportStage constant.)
@property (readonly, assign, nonatomic) BXImportStage importStage;

//How far through the current stage we have progressed.
//Only relevant during the BXImportSessionLoadingSourcePath and BXImportSessionImportingSourceFiles stages.
@property (readonly, assign, nonatomic) BXOperationProgress stageProgress;

//Whether our progress cannot be meaningfully determined currently.
//Only relevant during the BXImportSessionLoadingSourcePath and BXImportSessionImportingSourceFiles stages.
@property (readonly, assign, nonatomic) BOOL stageProgressIndeterminate;

//The final import/file transfer operation being performed to import the game's source files into the gamebox.
//Only relevant during the BXImportSessionImportingSourceFiles stage.
@property (readonly, retain, nonatomic) BXOperation *sourceFileImportOperation;

//The specific way we are importing the game's source files into the gamebox.
//This affects descriptions in the progress UI and confirmation prompts.
@property (readonly, assign, nonatomic) BXSourceFileImportType sourceFileImportType;

//Whether the user is allowed to skip the step of importing the source files into the game folder.
//Will be NO if the game did not install any files into the gamebox to start with.
@property (readonly, assign, nonatomic) BOOL sourceFileImportRequired;


#pragma mark -
#pragma mark Import helper methods

//The UTIs of filetypes we can accept for import.
+ (NSSet *)acceptedSourceTypes;

//Whether the specified source path is a folder, volume or image type we can import.
+ (BOOL) canImportFromSourcePath: (NSString *)sourcePath;

//Whether the game has installed any files into the gamebox's C drive.
//Only relevant after the game's installer has been run.
- (BOOL) gameDidInstall;

//Whether the DOS session is currently running an installer program.
//Used for toggling the display of the installation help bar versus the this-program-is-default bar.
- (BOOL) isRunningInstaller;


//Generate a new bootleg cover-art icon and add it to the gamebox.
//This icon will be based on the gamebox's name, and the age of the files being imported.
- (void) generateBootlegIcon;


#pragma mark -
#pragma mark Import steps

//Selects the specified source path, detects the game's details based on it,
//and continues to the next step of importing.
- (void) importFromSourcePath: (NSString *)path;

//Cancels an in-progress installer scan started from importFromSourcePath:.
- (void) cancelInstallerScan;

//Cancels a previously-specified source path and returns to the source path choice step.
- (void) cancelSourcePath;

//Selects the specified installer and launches it to continue importing.
- (void) launchInstaller: (NSString *)path;

//Skips the installer selection process and continues to the next step of importing.
- (void) skipInstaller;

//Closes the DOS installer process and continues to the next step of importing.
- (void) finishInstaller;

//Copy the source files into the gamebox.
- (void) importSourceFiles;

//Cancel an in-progress source-file import.
- (void) cancelSourceFileImport;

//Clean up the gamebox and finish the operation.
- (void) finalizeGamebox;


#pragma mark -
#pragma mark Notifications

//Custom progress callbacks for sourceFileImportOperation.
- (void) sourceFileImportInProgress: (NSNotification *)notification;
- (void) sourceFileImportDidFinish: (NSNotification *)notification;

//Custom progress callbacks for our installer scanner.
- (void) installerScanDidFinish: (NSNotification *)notification;

@end
